openapi: 3.0.0
info:
  title: ABCProduct
  description: ABCProduct 在庫の検索API
  version: 0.1.9

servers: 
  - url: http://localhost:8080

tags:
  - name: stock
    description: 在庫の検索

paths:
  /stock: # 全ての在庫表示
    get:
      tags:
        - stock
      summary: 全ての在庫表示
      description: 全ての在庫表示
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Stocks'
        "400":
          description: 在庫IDは無効です
        "404":
          description: 在庫IDが見つかりませんでした
        default:
          description: 予期しないエラー

  /stock/{productId}: # IDごとの在庫
    get:
      tags:
        - stock
      summary: IDごとの在庫
      description: IDごとの在庫
      parameters:
        - name: productId
          in: path
          description: 在庫ID
          required: true
          schema:
            type: integer
            format: int64
            example: 1
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Stocks'
        "400":
          description: 在庫IDは無効です
        "404":
          description: 在庫IDが見つかりませんでした
        default:
          description: 予期しないエラー

# definitions
components:
  schemas:
    Stocks: # テンプレート名
      type: object
      properties:
        productId:
          type: integer
          format: int64
          example: 1
        productName:
          type: string
          format: byte
          example: "AAA自動車"
        productPrice:
          type: integer
          format: int64
          example: 1000
        stockCounts:
          type: integer
          format: int64
          example: 100
        stockIn:
          type: boolean
          example: false
        stockOut:
          type: boolean
          example: false
        warehouseId:
          type: integer
          format: int64
          example: 9001
        warehouseName:
          type: string
          format: byte
          example: "東京倉庫"
        warehouseAddress:
          type: string
          format: byte
          example: "東京都千代田区1-1-1"
        