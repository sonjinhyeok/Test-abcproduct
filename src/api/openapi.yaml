openapi: 3.0.0
info:
  title: ABCProduct
  description: ABCProduct API
  version: 0.1.9
servers:
- url: http://localhost:8080
tags:
- name: stock
  description: 在庫
paths:
  /stock:
    get:
      tags:
      - stock
      summary: 全ての商品表示
      description: 全ての商品表示
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Stocks'
        "400":
          description: 商品IDは無効です
        "404":
          description: 商品IDが見つかりませんでした
        default:
          description: 予期しないエラー
  /stock/{productId}:
    get:
      tags:
      - stock
      summary: IDごとの商品
      description: IDごとの商品
      parameters:
      - name: productId
        in: path
        description: 商品ID
        required: true
        style: simple
        explode: false
        schema:
          type: integer
          format: int64
          example: 1
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Stocks'
        "400":
          description: 商品IDは無効です
        "404":
          description: 商品IDが見つかりませんでした
        default:
          description: 予期しないエラー
  /stock/detail/{productId}:
    delete:
      tags:
      - stock
      summary: 商品削除
      description: 商品削除
      parameters:
      - name: productId
        in: path
        description: 商品ID
        required: true
        style: simple
        explode: false
        schema:
          type: integer
          format: int64
          example: 1
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Stocks'
        "400":
          description: 商品IDは無効です
        "404":
          description: 商品IDが見つかりませんでした
        default:
          description: 予期しないエラー
  /stock/add/:
    post:
      tags:
      - stock
      summary: 商品登録情報
      description: 商品を各テーブルに1件登録する
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/body'
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Stocks'
components:
  schemas:
    Stocks:
      type: object
      properties:
        productId:
          type: integer
          format: int64
          example: 1
        productName:
          type: string
          format: byte
        productPrice:
          type: integer
          format: int64
          example: 1000
        stockCount:
          type: integer
          format: int64
          example: 100
        stockIn:
          type: boolean
          example: false
        stockOut:
          type: boolean
          example: false
        warehouseId:
          type: integer
          format: int64
          example: 9001
        warehouseName:
          type: string
          format: byte
        warehouseAddress:
          type: string
          format: byte
    body:
      type: object
      properties:
        productId:
          type: integer
        productName:
          type: string
        productPrice:
          type: integer
        stockCount:
          type: integer
        warehouseName:
          type: string
